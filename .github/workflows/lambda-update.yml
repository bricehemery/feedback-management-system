# name: Lambda Update Pipeline

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - "lambda/**/handler.py" # Trigger only if Lambda function code changes
#   pull_request:
#     branches:
#       - main
#     paths:
#       - "lambda/**/handler.py" # Trigger for PRs that change Lambda code

# env:
#   AWS_REGION: eu-west-3

# permissions:
#   id-token: write
#   contents: write

# jobs:
#   zip:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 2

#       - name: Get changed files
#         id: changed-files
#         uses: tj-actions/changed-files@v45

#       - name: List all changed files
#         env:
#           ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
#         run: |
#           for file in ${ALL_CHANGED_FILES}; do
#           echo "$file was changed"
#           done

#       - name: Detect updated Lambda handlers
#         id: detect-updated-handlers
#         run: |
#           echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
          
#           # Convert the list of changed files into lines and check for 'handler.py'
#           UPDATED_HANDLERS=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E '^lambda/.+/handler\.py$' || true)

#           echo "Detected updated handlers: $UPDATED_HANDLERS"

#           # Check if any handlers were updated
#           if [[ -z "$UPDATED_HANDLERS" ]]; then
#               echo "No updated handlers detected."
#               echo "skip_zip=true" >> $GITHUB_ENV
#           else
#               echo "Updated handlers: $UPDATED_HANDLERS"
#               echo "skip_zip=false" >> $GITHUB_ENV
#               cat <<EOF >> $GITHUB_ENV
#               updated_handlers<<EOF
#               $UPDATED_HANDLERS  
#               EOF
#               # echo "updated_handlers=$UPDATED_HANDLERS" >> $GITHUB_ENV
#           fi

#       - name: Zip updated Lambda handlers
#         if: env.skip_zip == 'false'
#         run: |
#           for handler in ${{ env.updated_handlers }}; do
#               HANDLER_DIR=$(dirname "$handler")
#               echo "Detected handler directory: $HANDLER_DIR"
#               cd "$HANDLER_DIR" || exit 1 # Navigate to the directory containing the handler
#               echo "Removing old handler.py.zip if it exists..."
#               rm -f handler.py.zip # Remove old zip file if it exists
#               echo "Zipping $HANDLER_DIR/handler.py into $HANDLER_DIR/handler.py.zip"
#               zip -j handler.py.zip handler.py # Create the zip file
#               ls -l
#               cd - || exit 1 # Return to the original directory
#           done

#       - name: Commit handler.py.zip to the repository
#         run: |
#           git config --global user.name "github-actions"
#           git config --global user.email "github-actions@github.com"
          
#           # Add all handler.zip files in lambda/ directories
#           git add lambda/*/handler.py.zip
          
#           # Check status before committing
#           git status

#           git commit -m "Update Lambda handler zip"
#           git push https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git HEAD:main

#   terraform:
#     needs: zip
#     uses: ./.github/workflows/infra-deploy.yml
